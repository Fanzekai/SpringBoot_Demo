<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--&lt;!&ndash; 日志级别从低到高分为TRACE < DEBUG < INFO < WARN < ERROR < FATAL，如果设置为WARN，则低于WARN的信息都不会输出 &ndash;&gt;-->
<!--&lt;!&ndash; scan:当此属性设置为true时，配置文档如果发生改变，将会被重新加载，默认值为true &ndash;&gt;-->
<!--&lt;!&ndash; scanPeriod:设置监测配置文档是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。-->
<!--                 当scan为true时，此属性生效。默认的时间间隔为1分钟。 &ndash;&gt;-->
<!--&lt;!&ndash; debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 &ndash;&gt;-->
<!--<configuration scan="true" scanPeriod="30 seconds">-->
<!--    &lt;!&ndash;  彩色日志依赖  &ndash;&gt;-->
<!--    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />-->
<!--    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />-->
<!--    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />-->

<!--    &lt;!&ndash;  日志文件储存地址, 通过application配置文件传入  &ndash;&gt;-->
<!--    &lt;!&ndash;    <springProperty scope="context" name="LOG_PATH" source="logback.logDir" />&ndash;&gt;-->
<!--    &lt;!&ndash;定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径&ndash;&gt;-->
<!--    <property name="LOG_PATH" value="./logs"/>-->

<!--    &lt;!&ndash;  控制台彩色日志格式  &ndash;&gt;-->
<!--&lt;!&ndash;    <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(-&#45;&#45;){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}" />&ndash;&gt;-->
<!--    &lt;!&ndash;  日志文件日志格式  &ndash;&gt;-->
<!--    <property name="FILE_LOG_PATTERN" value="${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } -&#45;&#45; [%15t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}" />-->


<!--    &lt;!&ndash; 控制台输出 &ndash;&gt;-->
<!--    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">-->
<!--        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
<!--            <pattern>${CONSOLE_LOG_PATTERN}</pattern>-->
<!--            <charset>UTF-8</charset>-->
<!--        </encoder>-->
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
<!--            <onMatch>ACCEPT</onMatch>-->
<!--            <onMismatch>DENY</onMismatch>-->
<!--        </filter>-->
<!--    </appender>-->


<!--    &lt;!&ndash; 按照每天及大小生成日志文件 &ndash;&gt;-->
<!--    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">-->
<!--            &lt;!&ndash;日志文件输出的文件名&ndash;&gt;-->
<!--            <FileNamePattern>${LOG_PATH}/my-blog-site.%d{yyyy-MM-dd}.%i.log</FileNamePattern>-->
<!--            &lt;!&ndash;日志文件最大大小&ndash;&gt;-->
<!--            <maxFileSize>100MB</maxFileSize>-->
<!--            &lt;!&ndash;日志文件保留天数&ndash;&gt;-->
<!--            <maxHistory>30</maxHistory>-->
<!--        </rollingPolicy>-->
<!--        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
<!--            <pattern>${FILE_LOG_PATTERN}</pattern>-->
<!--            <charset>UTF-8</charset>-->
<!--        </encoder>-->
<!--        &lt;!&ndash; 过滤级别,-->
<!--            如果想分类生成日志文件的话(分成debug、info、error等三个日志文件, 每个文件只记录自己级别的日志),-->
<!--            1. 直接把这个 <appender> 复制三分改一下 FileNamePattern 和 name.-->
<!--            2. 把 <filter> 注释去掉改一下 level 就可以了-->
<!--        &ndash;&gt;-->
<!--        &lt;!&ndash;        <filter class="ch.qos.logback.classic.filter.LevelFilter">&ndash;&gt;-->
<!--        &lt;!&ndash;            <level>info</level>&ndash;&gt;-->
<!--        &lt;!&ndash;            <onMatch>ACCEPT</onMatch>&ndash;&gt;-->
<!--        &lt;!&ndash;            <onMismatch>DENY</onMismatch>&ndash;&gt;-->
<!--        &lt;!&ndash;        </filter>&ndash;&gt;-->
<!--    </appender>-->


<!--    &lt;!&ndash; 日志输出级别-->
<!--        如果使用springProfile, 就需要在application配置文件中通过 spring.profiles.active=dev 来指定环境,-->
<!--        也可以直接去掉 <springProfile> 这个标签或者把它整个注释掉-->
<!--     &ndash;&gt;-->
<!--    <springProfile name="dev,prod">-->
<!--        <logger name="org.springframework" level="INFO" additivity="false">-->
<!--            <appender-ref ref="CONSOLE"/>-->
<!--            <appender-ref ref="FILE"/>-->
<!--        </logger>-->
<!--        <logger name="com.netflix" level="INFO" additivity="false">-->
<!--            <appender-ref ref="CONSOLE"/>-->
<!--            <appender-ref ref="FILE"/>-->
<!--        </logger>-->
<!--        <logger name="com.pro.test" level="DEBUG" additivity="false">-->
<!--            <appender-ref ref="CONSOLE"/>-->
<!--            <appender-ref ref="FILE"/>-->
<!--        </logger>-->
<!--        <logger name="java.sql" level="DEBUG" additivity="false">-->
<!--            <appender-ref ref="CONSOLE"/>-->
<!--            <appender-ref ref="FILE"/>-->
<!--        </logger>-->
<!--        &lt;!&ndash;项目包的路径&ndash;&gt;-->
<!--        <logger name="com.pro" level="DEBUG,INFO" additivity="false">-->
<!--            <appender-ref ref="CONSOLE"/>-->
<!--            <appender-ref ref="FILE"/>-->
<!--        </logger>-->
<!--    </springProfile>-->

<!--    <root level="INFO">-->
<!--        <appender-ref ref="CONSOLE" />-->
<!--        <appender-ref ref="FILE" />-->
<!--    </root>-->
<!--</configuration>-->
